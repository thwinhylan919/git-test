define(
  [],
  function() {
    "use strict";

    const GoalLocale = function() {
      return {
        root: {
          goal: {
            account: {
              goalNamelabel: "Goal Name",
              amountlabel: "Amount",
              maturitylabel: "Maturity Date",
              header: "Create Goal",
              category: "Category",
              creategoaldisclaimer: "We have prefilled the form based on the data you shared. Please provide us with some more information to help you create the goal.",
              sidisclaimer: "Standing Instructions End date cannot exceed Goal End Date",
              goalDetails: "Goal Details",
              goalName: "Name your Goal",
              goalAmount: "What is your Goal Amount?",
              initialAmount: "Have you already saved something for it?",
              contributionAccount: "Account number for initial contribution",
              amountRange: "Amount should be between {minAmount} & {maxAmount}",
              minAmountRange:"Amount should be more than {minAmount}",
              remainingAmount: "The remaining amount",
              tenure: "In how much time do you want to achieve this Goal?",
              years: "Years",
              months: "Months",
              quarterly: "Quarterly",
              monthly: "Monthly",
              weekly: "Weekly",
              invalidName: "Please enter valid goal name.",
              //'maturityInstructions': 'Maturity Instructions',
              onMaturity: "On goal maturity, you will receive your money in the account selected above.",
              onMaturitycheckBox: "No, I would like to plan how I wish to receive my money after this Goal has matured.",
              onSI: "Serious about achieving this goal? Set standing instructions to increase your chances.",
              SIFlag: "Yes, I would like to set standing instructions.",
              maturity: "How would you like the account transfer?",
              selfAccount: "Choose funding account number",
              self: "To my mapped accounts",
              domestic: "Through domestic clearing network",
              internal: "Internal bank account",
              branch: "Branch",
              networkType: "What would be the network type?",
              beneName: "Please mention the beneficiary name",
              bankCode: "Please tell us the bank code",
              verify: "Verify",
              bankName: "Bank Name",
              bankAddress: "Bank Address",
              bankCity: "City",
              invalidError: "Please enter a valid Bank Code",
              standingInstructions: "<strong>Standing Instructions </strong> (optional)",
              frequency: "At what frequency would you contribute for this Goal?",
              frequencyInvestment: "What will be the {frequency} contribution amount?",
              goalfrequencysuccesslabel: "{frequency} Contribution",
              startDate: "Which will be the contribution Start date?",
              endDate: "Which will be the contribution End date?",
              siAccount: "Contribution Account Number",
              select: "Select",
              backToDashboard: "Back To Dashboard",
              cancel: "Cancel",
              create: "Create",
              goalSnap: "Goal Snapshot",
              goToDashboard: "Go to Dashboard",
              goalAmountlabel: "Goal Amount :",
              goalacheiveby: "Want to achieve this Goal by :",
              monthlyContribution: "Monthly contribution",
              weeklyContribution: "Weekly Contribution",
              quarterlyContribution: "Quarterly Contribution",
              banklookup: "Look up Bank Code",
              banklookupTitle: "Click to look for bank code",
              submit: "Submit",
              imgCategoryAttr: "Goal Category Image",
              imgCategory: "Viewing Goal Category Image",
              imgCategoryEditAttr: "Click to edit Goal Category Image",
              imgCategoryEdit: "Edit Goal Category Image",
              invalidEndDate: "SI end date can not be less than the SI start date",
              invalidStartDate: "SI start date can not be greater than the SI end date",
              samedates: "SI start date and end date can not be same",
              resetcode: "Reset",
              invalidbankcode: "Invalid Bank Code",
              goalcreatedsuccessmsg: "Your goal has been successfully created!",
              emptyFileErrorMsg: "The uploaded file is empty, Please upload a valid file.",
              fileSizeErrorMsg: "The uploaded file exceeds the maximum permissible size of {fileSize} KB. Please reduce the file size and try again.",
              fileTypeError: "Invalid file type. Upload .JPG, .JPEG, .PNG files only.",
              maxSize: "1000000",
              goalTenureError: "Please specify Goal Tenure",
              titleGoalCreation: "Create Goal"
            }
          },
          navBarDescription: "Create Goal"
        },
        ar: true,
        fr: true,
        cs: true,
        sv: true,
        en: false,
es :true,
        "en-us": false,
        el: true
      };
    };

    return new GoalLocale();
  }
);